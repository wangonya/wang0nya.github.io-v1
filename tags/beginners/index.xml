<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Beginners on Kinyanjui Wangonya</title>
    <link>https://wang0nya.github.io/tags/beginners/</link>
    <description>Recent content in Beginners on Kinyanjui Wangonya</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 09 Sep 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://wang0nya.github.io/tags/beginners/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>The First Law Of Usability</title>
      <link>https://wang0nya.github.io/post/the-first-law-of-usability/</link>
      <pubDate>Sun, 09 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://wang0nya.github.io/post/the-first-law-of-usability/</guid>
      <description>Krug&amp;rsquo;s first law of usability: Don&amp;rsquo;t make me think! If you want to make your app or site easy to use, don&amp;rsquo;t make people think. As far as humanly possible, make it self-evident. Obvious. Self-explanatory.
A user with absolutely no previous knowledge or interest on your site should be able to take a first look and think, &amp;ldquo;Oh, its a _____________. Ok, there&amp;rsquo;s the _____________. And that&amp;rsquo;s a _____________. Here&amp;rsquo;s the thing that I want&amp;hellip;&amp;rdquo;</description>
    </item>
    
    <item>
      <title>Medieval Helpdesk</title>
      <link>https://wang0nya.github.io/post/medieval-helpdesk/</link>
      <pubDate>Fri, 07 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://wang0nya.github.io/post/medieval-helpdesk/</guid>
      <description>“The human brain’s capacity doesn’t change from one year to the next, so the insights from studying human behaviour have a very long shelf life. What was difficult for users twenty years ago continues to be difficult today.” - Jakob Nielsen
 Don’t Make Me Think! was first published 18 years ago, and if you&amp;rsquo;re just hearing about it now, it&amp;rsquo;s tempting to think: &amp;ldquo;Is it still relevant?&amp;rdquo; Well, yes.</description>
    </item>
    
    <item>
      <title>Javascript lookaheads and lookbehinds</title>
      <link>https://wang0nya.github.io/post/javascript-lookaheads-and-lookbehinds/</link>
      <pubDate>Wed, 29 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>https://wang0nya.github.io/post/javascript-lookaheads-and-lookbehinds/</guid>
      <description>Regular expressions (also called regex) are patterns used to match character combinations in strings. They help us work with strings in a very performant way.
By formulating regex with a special syntax, you can: * search text in a string * replace substrings in a string * extract information from a string
If all this is completely new to you, take a look at the mdn web docs for more info.</description>
    </item>
    
    <item>
      <title>Javascript array iteration with some() and every()</title>
      <link>https://wang0nya.github.io/post/javascript-array-iteration-with-some-and-every/</link>
      <pubDate>Tue, 28 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>https://wang0nya.github.io/post/javascript-array-iteration-with-some-and-every/</guid>
      <description>If you&amp;rsquo;re using an array in your code, chances are, you&amp;rsquo;ll need to iterate over the values in the array. There&amp;rsquo;s a couple of ways you can do that, some better and more efficient than others depending on what you want to accomplish.
For this post, I&amp;rsquo;ll focus on two ways: some() and every().
some() The some() method tests whether at least one element in the array passes the test implemented by the provided function.</description>
    </item>
    
  </channel>
</rss>